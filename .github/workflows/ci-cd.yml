name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build with Maven
      run: mvn clean install -DskipTests

    - name: List workspace files
      run: |
        echo "Listing files in the workspace:"
        ls -la

    - name: Display full path of target JAR
      run: realpath target/craft-0.0.1-SNAPSHOT.jar

    - name: Upload JAR as artifact
      uses: actions/upload-artifact@v4
      with:
        name: craft-app
        path: target/craft-0.0.1-SNAPSHOT.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: ${{ secrets.KNOWN_HOSTS }}
        if: ${{ secrets.SSH_PRIVATE_KEY }} && ${{ secrets.KNOWN_HOSTS }}

    - name: Download JAR artifact
      uses: actions/download-artifact@v4
      with:
        name: craft-app
        path: target/

    - name: Check for the existence of the JAR file
      run: |
        echo "Checking if JAR file exists..."
        ls -la target/craft-0.0.1-SNAPSHOT.jar
        if [ -f target/craft-0.0.1-SNAPSHOT.jar ]; then
          echo "File exists";
        else
          echo "File does not exist";
          exit 1;
        fi

    - name: Copy Files to EC2
      run: |
        echo "Copying files to EC2 instance..."
        scp -v -o StrictHostKeyChecking=no target/craft-0.0.1-SNAPSHOT.jar ubuntu@${{ secrets.EC2_IP }}:/home/ubuntu/

    - name: Deploy Application
      run: |
        echo "Deploying application..."
        ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_IP }} << 'EOF'
        sudo systemctl stop craft || echo "Service craft was not running."
        sudo systemctl start craft
        echo "ðŸš€ Craft service started successfully! ðŸŽ‰ Everything is awesome! ðŸŽˆ"
        EOF
